{
  "openapi": "3.0.1",
  "info": {
    "title": "Cuadra.AI",
    "description": "API Documentation",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.cuadra.ai",
      "description": "Production Server"
    }
  ],
  "security": [
    {
      "SupabaseOauth": []
    }
  ],
  "tags": [
    {
      "name": "Usage",
      "description": "Estimate you're request usage, and access to your current usage data."
    },
    {
      "name": "Models"
    },
    {
      "name": "Models",
      "description": "Create your own custom model, train it and use it!"
    },
    {
      "name": "Embeds"
    },
    {
      "name": "Chat"
    },
    {
      "name": "Chat",
      "description": "Interact with our different models to get intelligent results"
    },
    {
      "name": "Embeds",
      "description": "Feed your custom models with relevant information."
    },
    {
      "name": "Usage"
    }
  ],
  "paths": {
    "/usage/tokenize": {
      "post": {
        "tags": [
          "Usage"
        ],
        "summary": "Calculate Tokens",
        "operationId": "tokenize",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "payload"
                ],
                "type": "object",
                "properties": {
                  "payload": {
                    "$ref": "#/components/schemas/Chat"
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UsageCalculationEx"
                }
              }
            }
          }
        }
      }
    },
    "/model": {
      "get": {
        "tags": [
          "Models"
        ],
        "summary": "Get Models",
        "operationId": "getModels",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponseExListModelEx"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Models"
        ],
        "summary": "Create Model",
        "operationId": "createModel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelEx"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ModelEx"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Models"
        ],
        "summary": "Remove Model",
        "operationId": "removeModel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelEx"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ModelEx"
                }
              }
            }
          }
        }
      }
    },
    "/embed": {
      "post": {
        "tags": [
          "Embeds"
        ],
        "summary": "New Embed",
        "operationId": "chat",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "payload"
                ],
                "type": "object",
                "properties": {
                  "payload": {
                    "$ref": "#/components/schemas/Embed"
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EmbedResponseEx"
                }
              }
            }
          }
        }
      }
    },
    "/chat": {
      "post": {
        "tags": [
          "Chat"
        ],
        "summary": "New Chat",
        "operationId": "chat_1",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "payload"
                ],
                "type": "object",
                "properties": {
                  "payload": {
                    "$ref": "#/components/schemas/Chat"
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponseEx"
                }
              }
            }
          }
        }
      }
    },
    "/model/{id}": {
      "get": {
        "tags": [
          "Models"
        ],
        "summary": "Get Model",
        "operationId": "getModel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ModelEx"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Models"
        ],
        "summary": "Update Model",
        "operationId": "updateModel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelEx"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ModelEx"
                }
              }
            }
          }
        }
      }
    },
    "/usage/totals": {
      "get": {
        "tags": [
          "Usage"
        ],
        "summary": "Get Total Usage",
        "operationId": "tokenize_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TotalUsageEx"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Chat": {
        "required": [
          "chatId",
          "content",
          "model"
        ],
        "type": "object",
        "properties": {
          "model": {
            "maxLength": 50,
            "type": "string",
            "description": "Model name",
            "example": "ive.legal.1.1.0"
          },
          "content": {
            "type": "array",
            "description": "Request content",
            "items": {
              "$ref": "#/components/schemas/ContentEx"
            }
          },
          "chatId": {
            "type": "string",
            "description": "If you want to keep context between request, otherwise leave it empty, you get one with every chat you create.",
            "example": "a9d375c5-5a3e-48a0-9102-95eac0ece2e9"
          }
        }
      },
      "ContentEx": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "input": {
            "type": "string",
            "description": "Input is the task you want the AI to solve, only required when the type is a text.",
            "example": "Guide me on creating a legal document for x."
          },
          "inputReference": {
            "type": "string",
            "description": "Input Reference is the name of the file, if you're request is from a type other than text, and it's required for most types. It has to contain the same name as the file attached in the request.",
            "example": "legal-regulations.pdf"
          },
          "type": {
            "pattern": "text|audio|doc|image|video",
            "type": "string",
            "description": "Content type has to be either 'text', 'audio', 'doc', 'image', o 'video'.",
            "example": "text"
          }
        },
        "description": "Request content"
      },
      "UsageCalculationEx": {
        "type": "object",
        "properties": {
          "estimatedTokens": {
            "type": "integer",
            "description": "Estimated tokens for your request",
            "format": "int32",
            "example": 482
          }
        }
      },
      "ModelEx": {
        "required": [
          "description",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Model Id",
            "example": "72dfb4f5-27dc-40e2-9278-b0de30e8b131"
          },
          "name": {
            "type": "string",
            "description": "Model name",
            "example": "ive.legal.1.1.0"
          },
          "type": {
            "type": "string",
            "description": "Model type of content generation and processing",
            "example": "multimedia"
          },
          "description": {
            "type": "string",
            "description": "Brief description of the model",
            "example": "Oura-Legal is our next-generation AI model designed for powerful, intelligent, and adaptable legal purposes."
          },
          "proprietary": {
            "type": "boolean",
            "description": "Indicates whether is a custom model created by you or not",
            "example": false
          },
          "baseModel": {
            "type": "string",
            "description": "Base model name, if it was created from another model",
            "example": "ive.legal.1.1.0"
          },
          "baseModelId": {
            "type": "string",
            "description": "Base model id, if it was created from another model"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation date",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Last time it was updated",
            "format": "date-time"
          }
        }
      },
      "Embed": {
        "required": [
          "content",
          "model",
          "purpose"
        ],
        "type": "object",
        "properties": {
          "model": {
            "maxLength": 50,
            "type": "string",
            "description": "Model name",
            "example": "ive.legal.1.1.0"
          },
          "content": {
            "type": "array",
            "description": "Request content",
            "items": {
              "$ref": "#/components/schemas/ContentEx"
            }
          },
          "purpose": {
            "maxLength": 50,
            "pattern": "search_document|search_query|classification|clustering",
            "type": "string",
            "description": "The purpose of the embed, it could be 'search_document', 'search_query', 'classification', o 'clustering'.",
            "example": "classification"
          }
        }
      },
      "EmbedResponseEx": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Embed id",
            "example": "bd39e814-159d-4024-8e83-14025070ef77"
          },
          "usage": {
            "$ref": "#/components/schemas/UsageEx"
          }
        }
      },
      "TokensEx": {
        "type": "object",
        "properties": {
          "inputTokens": {
            "type": "integer",
            "description": "Number of tokens of the request input",
            "format": "int32",
            "example": 320
          },
          "outputTokens": {
            "type": "integer",
            "description": "Number of tokens of the response output",
            "format": "int32",
            "example": 490
          }
        },
        "description": "Tokens used"
      },
      "UsageEx": {
        "type": "object",
        "properties": {
          "billedTokens": {
            "$ref": "#/components/schemas/TokensEx"
          },
          "usedTokens": {
            "$ref": "#/components/schemas/TokensEx"
          }
        },
        "description": "This is the token usage result of your request"
      },
      "ChatResponseEx": {
        "type": "object",
        "properties": {
          "output": {
            "type": "string",
            "description": "Output generated by the AI to resolve the request",
            "example": "Here is a guide on creating a legal document for x..."
          },
          "confidenceScore": {
            "type": "number",
            "description": "Confidence score of how accurate is the output regarding your request",
            "example": 0.987
          },
          "model": {
            "type": "string",
            "description": "Model used to resolve your query",
            "example": "ive.legal.1.1.0"
          },
          "usage": {
            "$ref": "#/components/schemas/UsageEx"
          }
        }
      },
      "TotalUsageEx": {
        "type": "object",
        "properties": {
          "totalInput": {
            "type": "integer",
            "description": "Total Input Tokens used for this month",
            "format": "int32",
            "example": 12492
          },
          "totalOutput": {
            "type": "integer",
            "description": "Total Ouput Tokens used for this month",
            "format": "int32",
            "example": 24381
          }
        }
      },
      "PaginatedResponseExListModelEx": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelEx"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "SupabaseOauth": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://dguxglyyavnhlugtecgi.supabase.co/auth/v1/authorize",
            "tokenUrl": "https://dguxglyyavnhlugtecgi.supabase.co/auth/v1/token",
            "scopes": {}
          }
        }
      }
    }
  }
}